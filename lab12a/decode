`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date:    11:38:30 05/26/2019 
// Design Name: 
// Module Name:    decode
// Project Name: 
// Target Devices: 
// Tool versions: 
// Description: 
//
// Dependencies: 
//
// Revision: 
// Revision 0.01 - File Created
// Additional Comments: 
//
//////////////////////////////////////////////////////////////////////////////////
module decode(
	 input push,
    output [0:7] out0,
    output [0:7] out1,
    output [0:7] out2,
    output [0:7] out3,
    output [0:7] out4,
    output [0:7] out5,
    output [0:7] out6,
    output [0:7] out7,
	 output led0,
	 output led1,
	 output led2,
	 output led3,
	 output led4,
	 output led5,
	 output led6,
	 output led7
    );
	 
	 reg [0:2] val [0:7];
	 reg led0;
	 reg led1;
	 reg led2;
	 reg led3;
	 reg led4;
	 reg led5;
	 reg led6;
	 reg led7;
	 
	 initial begin 
			val[0] = 3'd3; 
			val[1] = 3'd4; 
			val[2] = 3'd7; 
			val[3] = 3'd2; 
			val[4] = 3'd3; 
			val[5] = 3'd5; 
			val[6] = 3'd0; 
			val[7] = 3'd2;
	 end
	decoder_8bit d0(
		.a(val[0][0]),
		.b(val[0][1]),
		.c(val[0][2]),
		.out0(out0[0]),
		.out1(out0[1]),
		.out2(out0[2]),
		.out3(out0[3]),
		.out4(out0[4]),
		.out5(out0[5]),
		.out6(out0[6]),
		.out7(out0[7])
		);
	decoder_8bit d1(
		.a(val[1][0]),
		.b(val[1][1]),
		.c(val[1][2]),
		.out0(out1[0]),
		.out1(out1[1]),
		.out2(out1[2]),
		.out3(out1[3]),
		.out4(out1[4]),
		.out5(out1[5]),
		.out6(out1[6]),
		.out7(out1[7])
		);
	decoder_8bit d2(
		.a(val[2][0]),
		.b(val[2][1]),
		.c(val[2][2]),
		.out0(out2[0]),
		.out1(out2[1]),
		.out2(out2[2]),
		.out3(out2[3]),
		.out4(out2[4]),
		.out5(out2[5]),
		.out6(out2[6]),
		.out7(out2[7])
		);
	decoder_8bit d3(
		.a(val[3][0]),
		.b(val[3][1]),
		.c(val[3][2]),
		.out0(out3[0]),
		.out1(out3[1]),
		.out2(out3[2]),
		.out3(out3[3]),
		.out4(out3[4]),
		.out5(out3[5]),
		.out6(out3[6]),
		.out7(out3[7])
		);
	decoder_8bit d4(
		.a(val[4][0]),
		.b(val[4][1]),
		.c(val[4][2]),
		.out0(out4[0]),
		.out1(out4[1]),
		.out2(out4[2]),
		.out3(out4[3]),
		.out4(out4[4]),
		.out5(out4[5]),
		.out6(out4[6]),
		.out7(out4[7])
		);
	decoder_8bit d5(
		.a(val[5][0]),
		.b(val[5][1]),
		.c(val[5][2]),
		.out0(out5[0]),
		.out1(out5[1]),
		.out2(out5[2]),
		.out3(out5[3]),
		.out4(out5[4]),
		.out5(out5[5]),
		.out6(out5[6]),
		.out7(out5[7])
		);
	decoder_8bit d6(
		.a(val[6][0]),
		.b(val[6][1]),
		.c(val[6][2]),
		.out0(out6[0]),
		.out1(out6[1]),
		.out2(out6[2]),
		.out3(out6[3]),
		.out4(out6[4]),
		.out5(out6[5]),
		.out6(out6[6]),
		.out7(out6[7])
		);
	decoder_8bit d7(
		.a(val[7][0]),
		.b(val[7][1]),
		.c(val[7][2]),
		.out0(out7[0]),
		.out1(out7[1]),
		.out2(out7[2]),
		.out3(out7[3]),
		.out4(out7[4]),
		.out5(out7[5]),
		.out6(out7[6]),
		.out7(out7[7])
		);
		initial begin
		led7 = out0[0]^out1[0]^out2[0]^out3[0]^out4[0]^out5[0]^out6[0]^out7[0];
		led6 = out0[1]^out1[1]^out2[1]^out3[1]^out4[1]^out5[1]^out6[1]^out7[1];
		led5 = out0[2]^out1[2]^out2[2]^out3[2]^out4[2]^out5[2]^out6[2]^out7[2];
		led4 = out0[3]^out1[3]^out2[3]^out3[3]^out4[3]^out5[3]^out6[3]^out7[3];
		led3 = out0[4]^out1[4]^out2[4]^out3[4]^out4[4]^out5[4]^out6[4]^out7[4];
		led2 = out0[5]^out1[5]^out2[5]^out3[5]^out4[5]^out5[5]^out6[5]^out7[5];
		led1 = out0[6]^out1[6]^out2[6]^out3[6]^out4[6]^out5[6]^out6[6]^out7[6];
		led0 = out0[7]^out1[7]^out2[7]^out3[7]^out4[7]^out5[7]^out6[7]^out7[7];
		end
		
		always @( posedge push)
		begin
			led0 = led0^led1^led2^led3^led4^led5^led6^led7;
		end
		
		always @( negedge push)
		begin
			led7 = out0[0]^out1[0]^out2[0]^out3[0]^out4[0]^out5[0]^out6[0]^out7[0];
			led6 = out0[1]^out1[1]^out2[1]^out3[1]^out4[1]^out5[1]^out6[1]^out7[1];
			led5 = out0[2]^out1[2]^out2[2]^out3[2]^out4[2]^out5[2]^out6[2]^out7[2];
			led4 = out0[3]^out1[3]^out2[3]^out3[3]^out4[3]^out5[3]^out6[3]^out7[3];
			led3 = out0[4]^out1[4]^out2[4]^out3[4]^out4[4]^out5[4]^out6[4]^out7[4];
			led2 = out0[5]^out1[5]^out2[5]^out3[5]^out4[5]^out5[5]^out6[5]^out7[5];
			led1 = out0[6]^out1[6]^out2[6]^out3[6]^out4[6]^out5[6]^out6[6]^out7[6];
			led0 = out0[7]^out1[7]^out2[7]^out3[7]^out4[7]^out5[7]^out6[7]^out7[7];
		end
endmodule
